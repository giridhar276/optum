** Everything in python is object ***
** Every object contains methods ****

objects
--------

number
---------
number can be integer or decimal or octal or hexa.

aval = 10
bval  = 34.34


string
-----------
string is defined in single or double or triple quotes.

name = 'python'
aname = "python programming"
bname = """unix shell scripting"""



list ( array in c )
---------------------
list contains set of elements.
Elements can be numbers or strings or any combination.
list elements are defined in []

alist = [10,20,30,40]
blist = ["java","oracle",34]



tuple ( immutable ,unchangeable , uneditable)
--------
tuple contains set of elements.
Elements can be numbers or strings or any combination.
tuple elmeents are defined in ().
Elements defined in tuple cant be modifed directly.

atup = (45,23,23,9)
btup = ("java","unix","python")


dictionary   ( json  hashmap  hash   associativearray )
-------------------------------
dictionary contains elements in key-value pairs.
keys are always unique
key can be either number or string
value can be number or string or list or tuple or dictionary or complex struc

sytax:    object = {key:value , key:value , key:value }
example:    book = {"chap1":10 ,"chap2":20,"chap3":30 }


set
------
set is UNORDERED collection of UNIQUE values of the same type.

aset = {10,10,10,20,30}



classify the objects
-------------------------



mutable objects ( changeable )
------------------
list
set
dictionary

immutable objects  ( unchangeable)
---------------------
number
string
tuple


file handling
---------------


- flat files  ( csv properties conf log dat ... )
-------------

opening the file
------------------

syntax:     object = open(filename,mode)
example:        fr = open('abc.txt','r')
                fw = open('abc.txt','w')
                fa = open('abc.txt','a')




closing the flie
--------------------
fr.close()


read operation
---------------
- reading line by line using file object
- using fobj.readlines()
- using fobj.read()
- using csv library
- using pandas library




exception handling
-------------------


There are 2 types of errors

- syntax error
- semantic error

handling the errors in runtime is known as exception handling.


try
except
else
finally
raise


package | library | module
------------------------------
-reusability purpose
-Every library contains set of methods.







mysql steps
---------------
display all existing databases
-------------------------------
show databases;

creating database
-----------------
create database optum;

access your database
----------------------
use optum;

creating table
------------------
create table realestate( street varchar(100), city varchar(100));

inserting records
-------------------
insert into realestate values('Hitechcity','Hyderabad');
insert into realestate values('MG Road','Chennai');

display all records
-------------------
select * from realstate;




re  - regular expressions
--------------------------
-search for patterns   ( re.search)
- match for patterns   ( re.match()
- replace              ( re.sub)
- find                 ( re.findall)
- split                ( re.split)

metacharacters or wildcard characters
-------------------------------------
^   $  +   * ?  .  ()  []  {}  \d \w \s





^ -  match at the beginning of the string








- third party files  ( pdf xlsx docx ... )




package | module | library
-------------------------------


builtin libraries
------------------
Builtin libraries which are generally used(math operations , OS level oprations , string manipulations , ftp ,) by everyone and installed with python tool itself.




third party libraries
----------------------
Depending on the requirement(cloud automations, ML, DA, test automation, IoT , network automations), developer has to install to third party module from 



- downloading manually and installing from www.pypi.org
- using pip tool ( pip install packagename)




definition | function | submodule | subroutine
-------------------------------------------------
- reusability purpose
- it starts with def keyword


different ways of passing arguments
-------------------------------------

fixed arguments
default arguments
keyword arguments
variable length arguments



Object oriented programming
------------------------------


- procedural programming  ( top down approach , Eg: C )
- Object oriented programming  ( eg. java, python )



class
-----
Class is just like blueprint of any model.
Every class contains data members and member functions.

Object
---------
object is the instance of the class.

self
------
self is the instance of the object







































